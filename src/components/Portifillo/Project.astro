---
import type { ImageMetadata } from "astro";
import Text from "@/components/Text";
import { Image } from "astro:assets";
import khmerBlog from "src/assets/pictures/khmerblog.png";
import { ExternalLink } from "lucide-react";
import { slugify } from "@/lib/utils";

interface VideoMedia {
  type: "video";
  src: string;
}

interface ImageMedia {
  type: "image";
  src: ImageMetadata;
  alt: string;
}

type MediaItem = VideoMedia | ImageMedia;

interface Project {
  title: string;
  description: string;
  link: string;
  media: MediaItem[];
}

const projects: Project[] = [
  {
    title: "LibSQL Studio",
    description:
      "Dive into LibSQL Studio, a fully-featured, lightweight cyberdeck for exploring Turso, LibSQL, and rqlite directly from your browser",
    link: "https://libsqlstudio.com",
    media: [
      {
        type: "video",
        src: "/videos/libsqlstudio-sql-query.mp4",
      },
    ],
  },
  {
    title: "KhmerCoders Blog",
    description:
      "A nexus where Khmer coders converge to innovate and thrive in the digital expanse.",
    link: "https://khmer.codes/",
    media: [
      {
        type: "image",
        src: khmerBlog,
        alt: "Khmer Blog Homepage",
      },
    ],
  },
];
---

<section
  class="text-foreground grow h-full rounded-md"
  aria-label="Open Source Chronicles"
>
  <Text variant="subheading" className="mb-6" id="open-source-chronicles"
    >Open Source Chronicles</Text
  >
  <div class="space-y-6 text-pretty">
    <Text variant="paragraph">
      Jack into their open-source contributions, each project a chapter in the
      ever-evolving story of our digital realm.
    </Text>

    {
      projects.map((project: Project) => (
        <article class="project">
          {project.media.map((media: MediaItem) => (
            <div class="media">
              {media.type === "video" ? (
                <video muted autoplay loop class="rounded-lg">
                  <source src={media.src} type="video/mp4" />
                </video>
              ) : (
                <Image
                  src={media.src}
                  alt={media.alt}
                  loading="lazy"
                  quality="high"
                  format="webp"
                />
              )}
            </div>
          ))}
          <div class="sticky-content">
            <Text
              variant="title"
              className="text-neon-pink  scroll-m-20 text-xl font-semibold tracking-tight  flex flex-row items-center gap-2"
              id={slugify(project.title)}
            >
              <ExternalLink />
              <a
                class="hover:underline nav-link"
                href={project.link}
                aria-label="open new tab"
              >
                {project.title}
              </a>
            </Text>

            <Text variant="body">{project.description}</Text>
          </div>
        </article>
      ))
    }
  </div>
</section>
